#!/usr/bin/perl 
use strict;
use 5.012;
use warnings;

no warnings 'uninitialized';

#my $pat = "A4xx(A32xA4)2xA2xA8x";
my $pat = "A4xxA32xA4xA32xA4xA2xA8xA8xA2xA8xA8xxA11xAxA8x";


while (<>)
{
#	say "line = ", $_;
	my %r; 
	@r{ 'id', 'localip_raw', 'localport', 'remoteip_raw', 
            'remoteport', 'status', 'txq', 'rxq','timeractive','timerexpire', 
            'rto_timeouts', 'uid', 'u_probes', 'inode'} =

          eval {unpack $pat, $_ };
	warn $@ if $@;
	

#	$r{localip} = join,  unpack '(A2)16' , $r{localip_raw};

	say "ref = ", join ':', unpack '(A4)8', join '',  (unpack '(A2)16',  $r{localip_raw})[qw/3 2 1 0 7 6 5 4 11 10 9 8 15 14 13 12/];

	#say "t = ",  $r{localip_raw} =~  s!\G(..)+!say "s = $1" !reg; 
	say "t = ",    $r{localip_raw} =~  s!(..)(..)(..)(..)!$4$3:$2$1:!rg  =~ s!:$!!rg; 
	#my $x;
	#$x .= "$4$3:$2$1:" while $r{localip_raw} =~ /(..)(..)(..)(..)/g;
	#say "t = ", $x;
	
	next;

	while (my ($k,$v) = each %r )
	{
		printf "%-24s %s\n", $k, $v;
	}
	say '--';
}


