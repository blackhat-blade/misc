#!/usr/bin/perl 
use strict;
use 5.012;
use warnings;

no warnings 'uninitialized';

my $str =  ' /unpackpushsprintflocaliplocalportremoteipremoteportstatusuidinodeprocnettcp6';

$, = "\n"; 

my @s =  unpack 'AAA6X4A4A4A7X6A6A7A9A8A10A6A3A5A4A3A4', $str;


my $d = shift;

print @s;
print "\n";





if ($d)
{
	printf "%3d\t%s\n",  ($_ - 42, chr $_ )   for  42 .. 126;#0 .. 9, 'A' .. 'Z', 'a' .. 'z';
 
}


#print @s[1,0];


#no strict 'refs';
#my @f = map {   \%&CORE::}  unpack 'A6X4A4A4A7X6A6', $str;

#use strict 'refs';
#my $f = sub { *{$_[0]}{CODE}};

#print @f;

__END__
my $pat = "A4xxA32xA4xA32xA4xA2xA8xA8xA2xA8xA8xxA11xAxA8x";


while (<>)
{
#	say "line = ", $_;
	my %r; 
	@r{ 'id', 'localip_raw', 'localport', 'remoteip_raw', 
            'remoteport', 'status', 'txq', 'rxq','timeractive','timerexpire', 
            'rto_timeouts', 'uid', 'u_probes', 'inode'} =

          eval {unpack $pat, $_ };
	warn $@ if $@;
	say "t = ",    $r{localip_raw} =~  s!(..)(..)(..)(..)!$4$3:$2$1:!rg  =~ s!:$!!rg; 
	
	next;

	while (my ($k,$v) = each %r )
	{
		printf "%-24s %s\n", $k, $v;
	}
	say '--';
}


