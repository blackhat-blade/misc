#!/usr/bin/perl

use 5.012;
use warnings;


=for doc

a a' <<  0
b b' <<  8
c c' <<  16
d d' <<  24

i a'|b'|c'|d'

=cut

sub ai($) 
{
	my $a = shift;
	my @o;

	@o = split /\./, $a;
	
	$o[3] | $o[2] << 8 | $o[1] << 16 | $o[0] <<24; 
}


=for doc

a i >> 24 & 255 
b i >> 16 & 255 
c i >>  8 & 255 
d i &  255 

=cut

sub ia($)
{
	my $i = shift;
	join '.', $i >> 24 & 255, $i >> 16 & 255, $i >> 8 & 255, $i & 255; 
}


=for doc

m  ~ (  ( 2 ** (32 - l) ) -1 );

=cut

sub b($)
{
	my $l = shift;

	~(  ( 2 ** (32 - $l) ) -1 );
}

=for doc

nutin' fancy

=cut

sub l($)
{
	my $m = shift;
	my $k = 31;
	
	$m = ~$m;
	--$k while $m >>= 1;
	$k; 
}


sub na ($$)
{
	my ($i, $m) = @_;
	$i & $m;
}

sub ba ($$)
{
	my ($i, $m) = @_;
	$i | ~$m;
}

sub allN($)
{	 
	my $i = shift;
	my @r;

	for my $a( 0 .. 32)
	{
		push @r, ($i & b $a);	
	}	
	@r
}


my $test;

$test = shift;
$, = "\t";

say "a", $test;
say "i", ai $test;
say "a'", ia ai $test; 
say "l", 12;
say "m", b 12;
say "m'", ia b 12;
say "l'", l b 12;
say "l1", 24;
say "m1", b 24;
say "m1'", ia b 24;
say "l1'", l b 24;
say "la1", 11;
say "ni1", na ai $test, b 11;
say "na1", ia na ai $test, b 11;
say "ba1", ia ba ai $test, b 11;

say "la2", 27;
say "ni2", na ai $test, b 27;
say "na2", ia na ai $test, b 27;
say "ba2", ia ba ai $test, b 27;
 
say "allN:";
#say map {$_ } allN ai $test;
my @all = allN ai $test;
say @all;


say "allN':";
say map {ia $_ } allN ai $test;
